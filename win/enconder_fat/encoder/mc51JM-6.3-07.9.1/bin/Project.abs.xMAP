
# Unreferenced symbols:
	(static_modes.c )	[whole file]
	_InitFlag	(SPI.c )
	(MCF51JM128.C )	[whole file]
	_pwrite_buffer	(main.c )
	_sel_buffer_write	(main.c )
	_datoH	(main.c )
	_datoL	(main.c )


# Link map of __startup
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
   2](__startup,func) found in global startcf.c , stack size = 0x4
    3](__ewl_exit,func) found in global librt.a abort_exit.o   , stack size = 0x4
     4](__ExitProcess,func) found in global startcf.c , stack size = 0x4
     4](___destroy_global_chain,func) found in global librt.a cf_staticinitia, stack size = 0x4
      5](___global_destructor_chain,object) found in global librt.a cf_staticinitia
    3](_main,func) found in global main.c , stack size = 0x5dc
     4](_free,func) found in global libc.a alloc.o        , stack size = 0x4
     4](_celt_mode_destroy,func) found in global modes.c , stack size = 0x10
      5](_quant_prob_free,func) found in global quant_bands.c , stack size = 0x4
      5](_clt_mdct_clear,func) found in global mdct.c , stack size = 0x8
     4](_celt_encoder_destroy,func) found in global celt.c , stack size = 0x8
      5](_check_mode,func) found in global modes.c , stack size = 0x4
     4](__d_add,notype) found in weak fp_coldfire_nodiv.a dadd.o         
      5](__fp_d_rounding,notype) found in weak fp_coldfire_nodiv.a dterminals.o   
     4](__d_mul,notype) found in weak fp_coldfire_nodiv.a dmul.o         
     4](__d_itod,notype) found in weak fp_coldfire_nodiv.a int_to_d.o     
     4](_celt_encode,func) found in global celt.c , stack size = 0xe8
      5](_ec_enc_done,func) found in global rangeenc.c , stack size = 0x14
       6](_ec_enc_carry_out,func) found in local rangeenc.c , stack size = 0x10
        7](_ec_byte_write1,func) found in global entenc.c , stack size = 0xc
         8](__ewl_abort,func) found in global librt.a abort_exit.o   , stack size = 0x4
       6](_ec_ilog,func) found in global entcode.c , stack size = 0x4
      5](_quant_energy_finalise,func) found in global quant_bands.c , stack size = 0x30
       6](_log2Amp,func) found in local quant_bands.c , stack size = 0x4
        7](_celt_exp2,func) found in local quant_bands.c , stack size = 0x8
       6](_ec_enc_bits,func) found in global entenc.c , stack size = 0x10
        7](_ec_encode_raw,func) found in global rangeenc.c , stack size = 0x10
         8](_ec_byte_write_at_end,func) found in global entenc.c , stack size = 0xc
      5](_quant_bands_stereo,func) found in global bands.c , stack size = 0x6c
       6](_intra_fold,func) found in global vq.c , stack size = 0x10
        7](_renormalise_vector,func) found in global vq.c , stack size = 0x20
         8](_celt_rcp,func) found in local vq.c , stack size = 0x14
         8](_celt_sqrt,func) found in local vq.c , stack size = 0x1c
          9](_@281,object) found in local vq.c 
        7](_fold,func) found in local vq.c , stack size = 0x14
         8](___lmod__,func) found in global librt.a cf_runtime.o   , stack size = 0x4
          9](___lmodu__,func) found in global librt.a cf_runtime.o   , stack size = 0x8
       6](_alg_quant,func) found in global vq.c , stack size = 0x6c
        7](_normalise_residual,func) found in local vq.c , stack size = 0x1c
         8](_celt_rsqrt_norm,func) found in local vq.c , stack size = 0xc
        7](_encode_pulses,func) found in global cwrs.c , stack size = 0x20
         8](_encode_pulses32,func) found in local cwrs.c , stack size = 0x20
          9](_ec_enc_uint,func) found in global entenc.c , stack size = 0x14
           10](_ec_encode,func) found in global rangeenc.c , stack size = 0x14
            11](_ec_enc_normalize,func) found in local rangeenc.c , stack size = 0x8
            11](___ldivu__,func) found in global librt.a cf_runtime.o   , stack size = 0x8
          9](_icwrs,func) found in global cwrs.c , stack size = 0x20
           10](_unext,func) found in local cwrs.c , stack size = 0x10
           10](_abs,func) found in global libc.a arith.o        , stack size = 0x4
           10](_icwrs1,func) found in local cwrs.c , stack size = 0xc
          9](_global_stack,object) found in global celt.c 
         8](___ldiv__,func) found in global librt.a cf_runtime.o   , stack size = 0x4
         8](_fits_in32,func) found in global cwrs.c , stack size = 0x4
          9](_@LOCAL@fits_in32__Fii@maxK@0,object) found in local cwrs.c 
          9](_@LOCAL@fits_in32__Fii@maxN,object) found in local cwrs.c 
        7](_exp_rotation,func) found in local vq.c , stack size = 0x38
         8](_celt_cos_norm,func) found in local vq.c , stack size = 0x4
          9](__celt_cos_pi_2,func) found in local vq.c , stack size = 0xc
        7](_get_pulses,func) found in local vq.c , stack size = 0x4
       6](_bitexact_cos,func) found in local bands.c , stack size = 0xc
       6](_bits2pulses,func) found in local bands.c , stack size = 0x10
       6](_celt_sqrt,func) found in local bands.c , stack size = 0x1c
        7](_@590,object) found in local bands.c 
       6](_celt_atan2p,func) found in local bands.c , stack size = 0x18
        7](_celt_atan01,func) found in local bands.c , stack size = 0xc
        7](_celt_rcp,func) found in local bands.c , stack size = 0x14
       6](_stereo_band_mix,func) found in local bands.c , stack size = 0x3c
        7](_celt_zlog2,func) found in local bands.c , stack size = 0x4
       6](_log2_frac,func) found in global cwrs.c , stack size = 0x14
       6](_ec_enc_tell,func) found in global rangeenc.c , stack size = 0x14
        7](_ec_byte_bytes,func) found in local rangeenc.c , stack size = 0x4
      5](_quant_bands,func) found in global bands.c , stack size = 0x40
      5](_quant_fine_energy,func) found in global quant_bands.c , stack size = 0x2c
      5](_compute_allocation,func) found in global rate.c , stack size = 0x48
       6](_interp_bits2pulses,func) found in local rate.c , stack size = 0x44
      5](_ec_byte_shrink,func) found in global entenc.c , stack size = 0x4
      5](_quant_coarse_energy,func) found in global quant_bands.c , stack size = 0x4c
       6](_ec_laplace_encode_start,func) found in global laplace.c , stack size = 0x1c
        7](_ec_encode_bin,func) found in global rangeenc.c , stack size = 0x10
       6](_eMeans,object) found in global quant_bands.c 
       6](___clear,func) found in global librt.a cpluslib.o     , stack size = 0x8
       6](@ex@___clear,object) found in local librt.a cpluslib.o     
      5](_encode_flags,func) found in local celt.c , stack size = 0xc
       6](_flaglist,object) found in local celt.c 
      5](_renormalise_bands,func) found in global bands.c , stack size = 0x24
      5](_mdct_shape,func) found in local celt.c , stack size = 0x1c
      5](_@1572,object) found in local celt.c 
      5](_intra_decision,func) found in global quant_bands.c , stack size = 0xc
      5](_folding_decision,func) found in global bands.c , stack size = 0x3c
      5](_normalise_bands,func) found in global bands.c , stack size = 0x30
      5](_amp2Log,func) found in local celt.c , stack size = 0x4
       6](_celt_log2,func) found in local celt.c , stack size = 0x18
        7](_@617,object) found in local celt.c 
      5](_compute_band_energies,func) found in global bands.c , stack size = 0x30
      5](_compute_mdcts,func) found in local celt.c , stack size = 0x40
       6](_clt_mdct_forward,func) found in global mdct.c , stack size = 0x70
        7](_kiss_fft_celt_double,func) found in global kiss_fft.c , stack size = 0xc
         8](_kiss_fft_stride_celt_double,func) found in global kiss_fft.c , stack size = 0x24
          9](_kf_work_celt_double,func) found in global kiss_fft.c , stack size = 0x40
           10](_kf_bfly_generic,func) found in local kiss_fft.c , stack size = 0x54
           10](_kf_bfly5,func) found in local kiss_fft.c , stack size = 0x140
           10](_kf_bfly3,func) found in local kiss_fft.c , stack size = 0x88
           10](_kf_bfly4,func) found in local kiss_fft.c , stack size = 0xc0
           10](_kf_bfly2,func) found in local kiss_fft.c , stack size = 0x40
      5](_celt_rcp,func) found in local celt.c , stack size = 0x14
      5](_transientWindow,object) found in local celt.c 
      5](_transient_analysis,func) found in local celt.c , stack size = 0x20
      5](_memcpy,func) found in global libc.a mem.o          , stack size = 0x8
      5](_ec_enc_init,func) found in global rangeenc.c , stack size = 0x4
      5](_ec_byte_writeinit_buffer,func) found in global entenc.c , stack size = 0x4
      5](_memset,func) found in global libc.a mem.o          , stack size = 0x8
       6](___fill_mem,func) found in global libc.a mem_funcs.o    , stack size = 0x14
      5](_check_encoder,func) found in local celt.c , stack size = 0x4
     4](_readFrame,func) found in global main.c , stack size = 0x1c
      5](_SCI_send_uchar,func) found in global main.c , stack size = 0x4
      5](_fin02,object) found in global main.c 
      5](_fin01,object) found in global main.c 
      5](_sel_buffer_read,object) found in global main.c 
      5](_pread_buffer,object) found in global main.c 
     4](_FAT_FileWrite,func) found in global Fat.c , stack size = 0x18
      5](_FAT_Entry,func) found in global Fat.c , stack size = 0x14
       6](_SD_Write_Block,func) found in global SD.c , stack size = 0xc
        7](_SPI_Receive_byte,func) found in global SPI.c , stack size = 0x4
        7](_SPI_Send_byte,func) found in global SPI.c , stack size = 0x4
        7](_SD_SendCommand,func) found in global SD.c , stack size = 0x10
         8](_gu8SD_Argument,object) found in global SD.c 
       6](_SD_Read_Block,func) found in global SD.c , stack size = 0xc
       6](_u16FAT_FAT_BASE,object) found in global Fat.c 
       6](_ag8FATReadBuffer,object) found in global Fat.c 
       6](_u16FAT_Sector_Size,object) found in global Fat.c 
      5](_FAT_SearchAvailableFAT,func) found in global Fat.c , stack size = 0x10
       6](_u16Main_Offset,object) found in global Fat.c 
       6](_u16FAT_Root_BASE,object) found in global Fat.c 
      5](_ag8FATWriteBuffer,object) found in global Fat.c 
      5](_u16FAT_Cluster_Size,object) found in global Fat.c 
      5](_WHandler,object) found in global Fat.c 
      5](_u16FAT_Data_BASE,object) found in global Fat.c 
     4](_@230,object) found in local main.c 
     4](_FAT_FileClose,func) found in global Fat.c , stack size = 0x10
      5](_LWordSwap,func) found in global Fat.c , stack size = 0x8
     4](_FAT_FileOpen,func) found in global Fat.c , stack size = 0x3c
      5](_RHandler,object) found in global Fat.c 
      5](_FAT_FileNameOrganizer,func) found in global Fat.c , stack size = 0x8
     4](_@229,object) found in local main.c 
     4](_FAT_Read_Master_Block,func) found in global Fat.c , stack size = 0x4
     4](_SD_Init,func) found in global SD.c , stack size = 0x4
      5](_SD_CLKDelay,func) found in global SD.c , stack size = 0x8
      5](_SPI_Init,func) found in global SPI.c , stack size = 0x4
     4](_malloc,func) found in global libc.a alloc.o        , stack size = 0x14
      5](_errno,object) found in global libc.a errno.o        
      5](_tail,object) found in local libc.a alloc.o        
       6](_head,object) found in local libc.a alloc.o        
      5](_sbrk,func) found in global libc.a alloc.o        , stack size = 0x8
       6](_brk,func) found in global libc.a alloc.o        , stack size = 0x8
        7](___break,object) found in local libc.a alloc.o        
     4](_SCI_send_header,func) found in global main.c , stack size = 0x8
     4](_celt_header_to_packet,func) found in global header.c , stack size = 0xc
      5](__le_32,func) found in local header.c , stack size = 0x8
     4](_celt_encoder_create,func) found in global celt.c , stack size = 0x18
      5](_calloc,func) found in global libc.a alloc.o        , stack size = 0xc
     4](_celt_header_init,func) found in global header.c , stack size = 0x10
      5](_celt_mode_info,func) found in global modes.c , stack size = 0x10
      5](_@266,object) found in local header.c 
      5](_@265,object) found in local header.c 
     4](_celt_mode_create,func) found in global modes.c , stack size = 0x140
      5](_quant_prob_alloc,func) found in global quant_bands.c , stack size = 0x10
       6](_ec_laplace_get_start_freq,func) found in global laplace.c , stack size = 0x4
      5](_clt_mdct_init,func) found in global mdct.c , stack size = 0x14
       6](_celt_cos_norm,func) found in local mdct.c , stack size = 0x4
        7](__celt_cos_pi_2,func) found in local mdct.c , stack size = 0xc
       6](_kiss_fft_alloc_celt_double,func) found in global kiss_fft.c , stack size = 0x1c
        7](_compute_bitrev_table,func) found in local kiss_fft.c , stack size = 0x2c
        7](_kf_factor,func) found in local kiss_fft.c , stack size = 0x10
        7](_celt_cos_norm,func) found in local kiss_fft.c , stack size = 0x4
         8](__celt_cos_pi_2,func) found in local kiss_fft.c , stack size = 0xc
      5](_compute_alloc_cache,func) found in global rate.c , stack size = 0x124
       6](_get_pulses,func) found in local rate.c , stack size = 0x4
       6](_get_required_bits,func) found in global cwrs.c , stack size = 0x28
        7](_get_required_split_bits,func) found in local cwrs.c , stack size = 0x20
        7](_get_required_bits_pair,func) found in local cwrs.c , stack size = 0x28
        7](_ncwrs_urow,func) found in local cwrs.c , stack size = 0x14
      5](__d_dtoi,notype) found in weak fp_coldfire_nodiv.a dtoi.o         
      5](__d_flt,notype) found in weak fp_coldfire_nodiv.a dcompare.o     
      5](_sin,func) found in global libm.a s_sin.o        , stack size = 0x78
       6](__d_neg,notype) found in weak fp_coldfire_nodiv.a basic.o        
       6](___kernel_cos,func) found in global libm.a k_cos.o        , stack size = 0x120
       6](___ieee754_rem_pio2,func) found in global libm.a e_rem_pio2.o   , stack size = 0x214
        7](_npio2_hw,object) found in local libm.a e_rem_pio2.o   
        7](_fabs,func) found in global libm.a s_fabs.o       , stack size = 0x4
        7](___kernel_rem_pio2,func) found in global libm.a k_rem_pio2.o   , stack size = 0x45c
         8](_PIo2,object) found in local libm.a k_rem_pio2.o   
         8](_floor,func) found in global libm.a s_floor.o      , stack size = 0x54
         8](_scalbn,func) found in global libm.a math_sun.o     , stack size = 0x2c
          9](_ldexp,func) found in global libm.a s_ldexp.o      , stack size = 0x78
           10](_copysign,func) found in global libm.a s_copysign.o   , stack size = 0x4
           10](___fpclassifyd,func) found in global libm.a math_api.o     , stack size = 0x4
          9](_frexp,func) found in global libm.a s_frexp.o      , stack size = 0x30
         8](_init_jk,object) found in local libm.a k_rem_pio2.o   
        7](_two_over_pi,object) found in local libm.a e_rem_pio2.o   
       6](___kernel_sin,func) found in global libm.a k_sin.o        , stack size = 0xf0
      5](__d_div,notype) found in weak fp_coldfire_nodiv.a ddiv.o         
       6](__fp_PA_divu16,notype) found in weak fp_coldfire_nodiv.a soft_division.o
      5](_compute_allocation_table,func) found in local modes.c , stack size = 0x34
       6](_band_allocation,object) found in local modes.c 
       6](_bark_freq,object) found in local modes.c 
      5](_compute_ebands,func) found in local modes.c , stack size = 0x34
     4](_MCU_init,func) found in global MCUinit.c , stack size = 0x4
    3](___initialize_system,func) found in overload startcf.c , stack size = 0x4
    3](___call_static_initializers,func) found in global librt.a cf_staticinitia, stack size = 0x8
    3](___copy_rom_sections_to_ram,func) found in local startcf.c , stack size = 0x8
     4](___copy_rom_section,func) found in local startcf.c , stack size = 0xc
    3](_clear_mem,func) found in local startcf.c , stack size = 0x8
    3](___initialize_hardware,func) found in global MCUinit.c , stack size = 0x4
  1].abs found in MCUinit.c 
   2](_isr_default,func) found in global MCUinit.c , stack size = 0x4
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
   2](_isrVspi1,func) found in global MCUinit.c , stack size = 0x4
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1].abs found in MCUinit.c 
  1](__startup,func) found in global startcf.c , stack size = 0x4

# .abs_vector_0
  00000000 00000004 .abs    vector_0	(MCUinit.c)

# .abs_vector_1
  00000004 00000004 .abs    vector_1	(MCUinit.c)

# .abs_vector_2
  00000008 00000004 .abs    vector_2	(MCUinit.c)

# .abs_vector_3
  0000000C 00000004 .abs    vector_3	(MCUinit.c)

# .abs_vector_4
  00000010 00000004 .abs    vector_4	(MCUinit.c)

# .abs_vector_5
  00000014 00000004 .abs    vector_5	(MCUinit.c)

# .abs_vector_6
  00000018 00000004 .abs    vector_6	(MCUinit.c)

# .abs_vector_7
  0000001C 00000004 .abs    vector_7	(MCUinit.c)

# .abs_vector_8
  00000020 00000004 .abs    vector_8	(MCUinit.c)

# .abs_vector_9
  00000024 00000004 .abs    vector_9	(MCUinit.c)

# .abs_vector_10
  00000028 00000004 .abs    vector_10	(MCUinit.c)

# .abs_vector_11
  0000002C 00000004 .abs    vector_11	(MCUinit.c)

# .abs_vector_12
  00000030 00000004 .abs    vector_12	(MCUinit.c)

# .abs_vector_13
  00000034 00000004 .abs    vector_13	(MCUinit.c)

# .abs_vector_14
  00000038 00000004 .abs    vector_14	(MCUinit.c)

# .abs_vector_15
  0000003C 00000004 .abs    vector_15	(MCUinit.c)

# .abs_vector_16
  00000040 00000004 .abs    vector_16	(MCUinit.c)

# .abs_vector_17
  00000044 00000004 .abs    vector_17	(MCUinit.c)

# .abs_vector_18
  00000048 00000004 .abs    vector_18	(MCUinit.c)

# .abs_vector_19
  0000004C 00000004 .abs    vector_19	(MCUinit.c)

# .abs_vector_20
  00000050 00000004 .abs    vector_20	(MCUinit.c)

# .abs_vector_21
  00000054 00000004 .abs    vector_21	(MCUinit.c)

# .abs_vector_22
  00000058 00000004 .abs    vector_22	(MCUinit.c)

# .abs_vector_23
  0000005C 00000004 .abs    vector_23	(MCUinit.c)

# .abs_vector_24
  00000060 00000004 .abs    vector_24	(MCUinit.c)

# .abs_vector_25
  00000064 00000004 .abs    vector_25	(MCUinit.c)

# .abs_vector_26
  00000068 00000004 .abs    vector_26	(MCUinit.c)

# .abs_vector_27
  0000006C 00000004 .abs    vector_27	(MCUinit.c)

# .abs_vector_28
  00000070 00000004 .abs    vector_28	(MCUinit.c)

# .abs_vector_29
  00000074 00000004 .abs    vector_29	(MCUinit.c)

# .abs_vector_30
  00000078 00000004 .abs    vector_30	(MCUinit.c)

# .abs_vector_31
  0000007C 00000004 .abs    vector_31	(MCUinit.c)

# .abs_vector_32
  00000080 00000004 .abs    vector_32	(MCUinit.c)

# .abs_vector_33
  00000084 00000004 .abs    vector_33	(MCUinit.c)

# .abs_vector_34
  00000088 00000004 .abs    vector_34	(MCUinit.c)

# .abs_vector_35
  0000008C 00000004 .abs    vector_35	(MCUinit.c)

# .abs_vector_36
  00000090 00000004 .abs    vector_36	(MCUinit.c)

# .abs_vector_37
  00000094 00000004 .abs    vector_37	(MCUinit.c)

# .abs_vector_38
  00000098 00000004 .abs    vector_38	(MCUinit.c)

# .abs_vector_39
  0000009C 00000004 .abs    vector_39	(MCUinit.c)

# .abs_vector_40
  000000A0 00000004 .abs    vector_40	(MCUinit.c)

# .abs_vector_41
  000000A4 00000004 .abs    vector_41	(MCUinit.c)

# .abs_vector_42
  000000A8 00000004 .abs    vector_42	(MCUinit.c)

# .abs_vector_43
  000000AC 00000004 .abs    vector_43	(MCUinit.c)

# .abs_vector_44
  000000B0 00000004 .abs    vector_44	(MCUinit.c)

# .abs_vector_45
  000000B4 00000004 .abs    vector_45	(MCUinit.c)

# .abs_vector_46
  000000B8 00000004 .abs    vector_46	(MCUinit.c)

# .abs_vector_47
  000000BC 00000004 .abs    vector_47	(MCUinit.c)

# .abs_vector_48
  000000C0 00000004 .abs    vector_48	(MCUinit.c)

# .abs_vector_49
  000000C4 00000004 .abs    vector_49	(MCUinit.c)

# .abs_vector_50
  000000C8 00000004 .abs    vector_50	(MCUinit.c)

# .abs_vector_51
  000000CC 00000004 .abs    vector_51	(MCUinit.c)

# .abs_vector_52
  000000D0 00000004 .abs    vector_52	(MCUinit.c)

# .abs_vector_53
  000000D4 00000004 .abs    vector_53	(MCUinit.c)

# .abs_vector_54
  000000D8 00000004 .abs    vector_54	(MCUinit.c)

# .abs_vector_55
  000000DC 00000004 .abs    vector_55	(MCUinit.c)

# .abs_vector_56
  000000E0 00000004 .abs    vector_56	(MCUinit.c)

# .abs_vector_57
  000000E4 00000004 .abs    vector_57	(MCUinit.c)

# .abs_vector_58
  000000E8 00000004 .abs    vector_58	(MCUinit.c)

# .abs_vector_59
  000000EC 00000004 .abs    vector_59	(MCUinit.c)

# .abs_vector_60
  000000F0 00000004 .abs    vector_60	(MCUinit.c)

# .abs_vector_61
  000000F4 00000004 .abs    vector_61	(MCUinit.c)

# .abs_vector_62
  000000F8 00000004 .abs    vector_62	(MCUinit.c)

# .abs_vector_63
  000000FC 00000004 .abs    vector_63	(MCUinit.c)

# .abs_vector_64
  00000100 00000004 .abs    vector_64	(MCUinit.c)

# .abs_vector_65
  00000104 00000004 .abs    vector_65	(MCUinit.c)

# .abs_vector_66
  00000108 00000004 .abs    vector_66	(MCUinit.c)

# .abs_vector_67
  0000010C 00000004 .abs    vector_67	(MCUinit.c)

# .abs_vector_68
  00000110 00000004 .abs    vector_68	(MCUinit.c)

# .abs_vector_69
  00000114 00000004 .abs    vector_69	(MCUinit.c)

# .abs_vector_70
  00000118 00000004 .abs    vector_70	(MCUinit.c)

# .abs_vector_71
  0000011C 00000004 .abs    vector_71	(MCUinit.c)

# .abs_vector_72
  00000120 00000004 .abs    vector_72	(MCUinit.c)

# .abs_vector_73
  00000124 00000004 .abs    vector_73	(MCUinit.c)

# .abs_vector_74
  00000128 00000004 .abs    vector_74	(MCUinit.c)

# .abs_vector_75
  0000012C 00000004 .abs    vector_75	(MCUinit.c)

# .abs_vector_76
  00000130 00000004 .abs    vector_76	(MCUinit.c)

# .abs_vector_77
  00000134 00000004 .abs    vector_77	(MCUinit.c)

# .abs_vector_78
  00000138 00000004 .abs    vector_78	(MCUinit.c)

# .abs_vector_79
  0000013C 00000004 .abs    vector_79	(MCUinit.c)

# .abs_vector_80
  00000140 00000004 .abs    vector_80	(MCUinit.c)

# .abs_vector_81
  00000144 00000004 .abs    vector_81	(MCUinit.c)

# .abs_vector_82
  00000148 00000004 .abs    vector_82	(MCUinit.c)

# .abs_vector_83
  0000014C 00000004 .abs    vector_83	(MCUinit.c)

# .abs_vector_84
  00000150 00000004 .abs    vector_84	(MCUinit.c)

# .abs_vector_85
  00000154 00000004 .abs    vector_85	(MCUinit.c)

# .abs_vector_86
  00000158 00000004 .abs    vector_86	(MCUinit.c)

# .abs_vector_87
  0000015C 00000004 .abs    vector_87	(MCUinit.c)

# .abs_vector_88
  00000160 00000004 .abs    vector_88	(MCUinit.c)

# .abs_vector_89
  00000164 00000004 .abs    vector_89	(MCUinit.c)

# .abs_vector_90
  00000168 00000004 .abs    vector_90	(MCUinit.c)

# .abs_vector_91
  0000016C 00000004 .abs    vector_91	(MCUinit.c)

# .abs_vector_92
  00000170 00000004 .abs    vector_92	(MCUinit.c)

# .abs_vector_93
  00000174 00000004 .abs    vector_93	(MCUinit.c)

# .abs_vector_94
  00000178 00000004 .abs    vector_94	(MCUinit.c)

# .abs_vector_95
  0000017C 00000004 .abs    vector_95	(MCUinit.c)

# .abs_vector_96
  00000180 00000004 .abs    vector_96	(MCUinit.c)

# .abs_vector_97
  00000184 00000004 .abs    vector_97	(MCUinit.c)

# .abs_vector_98
  00000188 00000004 .abs    vector_98	(MCUinit.c)

# .abs_vector_99
  0000018C 00000004 .abs    vector_99	(MCUinit.c)

# .abs_vector_100
  00000190 00000004 .abs    vector_100	(MCUinit.c)

# .abs_vector_101
  00000194 00000004 .abs    vector_101	(MCUinit.c)

# .abs_vector_102
  00000198 00000004 .abs    vector_102	(MCUinit.c)

# .abs_vector_103
  0000019C 00000004 .abs    vector_103	(MCUinit.c)

# .abs_vector_104
  000001A0 00000004 .abs    vector_104	(MCUinit.c)

# .abs_vector_105
  000001A4 00000004 .abs    vector_105	(MCUinit.c)

# .abs_vector_106
  000001A8 00000004 .abs    vector_106	(MCUinit.c)

# .abs_vector_107
  000001AC 00000004 .abs    vector_107	(MCUinit.c)

# .abs_vector_108
  000001B0 00000004 .abs    vector_108	(MCUinit.c)

# .abs_vector_109
  000001B4 00000004 .abs    vector_109	(MCUinit.c)

# .abs_vector_110
  000001B8 00000004 .abs    vector_110	(MCUinit.c)

# .abs_NVPROT_INIT
  0000040D 00000001 .abs    NVPROT_INIT	(MCUinit.c)

# .abs_NVOPT_INIT
  0000040F 00000001 .abs    NVOPT_INIT	(MCUinit.c)
#>00002590          ___heap_size (linker command file)
#>00000800          ___stack_size (linker command file)
#>00800000          ___RAM_ADDRESS (linker command file)
#>00004000          ___RAM_SIZE (linker command file)
#>00000000          ___FLASH_ADDRESS (linker command file)
#>00020000          ___FLASH_SIZE (linker command file)

# .userram

# .code

# .text
  00000410 00000002 .text   __initialize_system	(startcf.c)
  00000412 0000001C .text   __copy_rom_section	(startcf.c)
  0000042E 00000034 .text   __copy_rom_sections_to_ram	(startcf.c)
  00000462 00000004 .text   _ExitProcess	(startcf.c)
  00000466 00000064 .text   clear_mem	(startcf.c)
  000004CA 0000009A .text   _startup	(startcf.c)
  00000564 000000C4 .text   __initialize_hardware	(MCUinit.c)
  00000628 000000C6 .text   MCU_init	(MCUinit.c)
  000006EE 00000002 .text   isr_default	(MCUinit.c)
  000006F0 00000002 .text   isrVspi1	(MCUinit.c)
  000006F2 00000170 .text   compute_band_energies	(bands.c)
  00000862 000000C0 .text   celt_sqrt	(bands.c)
  00000922 00000100 .text   normalise_bands	(bands.c)
  00000A22 000000B8 .text   celt_rcp	(bands.c)
  00000ADA 0000001C .text   celt_zlog2	(bands.c)
  00000AF6 0000006A .text   renormalise_bands	(bands.c)
  00000B60 0000017E .text   stereo_band_mix	(bands.c)
  00000CDE 000001DE .text   folding_decision	(bands.c)
  00000EBC 000001DC .text   quant_bands	(bands.c)
  00001098 0000004C .text   bits2pulses	(bands.c)
  000010E4 000004EC .text   quant_bands_stereo	(bands.c)
  000015D0 00000074 .text   bitexact_cos	(bands.c)
  00001644 00000100 .text   celt_atan2p	(bands.c)
  00001744 0000004E .text   celt_atan01	(bands.c)
  00001792 0000001A .text   check_encoder	(celt.c)
  000017AC 00000130 .text   celt_encoder_create	(celt.c)
  000018DC 0000006C .text   celt_encoder_destroy	(celt.c)
  00001948 0000019A .text   transient_analysis	(celt.c)
  00001AE2 0000013C .text   compute_mdcts	(celt.c)
  00001C1E 0000009E .text   encode_flags	(celt.c)
  00001CBC 00000066 .text   mdct_shape	(celt.c)
  00001D22 00000A8C .text   celt_encode	(celt.c)
  000027AE 0000001A .text   amp2Log	(celt.c)
  000027C8 0000009E .text   celt_log2	(celt.c)
  00002866 000000B8 .text   celt_rcp	(celt.c)
  0000291E 00000090 .text   ec_ilog	(entcode.c)
  000029AE 00000018 .text   ec_byte_writeinit_buffer	(entenc.c)
  000029C6 00000012 .text   ec_byte_shrink	(entenc.c)
  000029D8 0000002E .text   ec_byte_write1	(entenc.c)
  00002A06 0000002C .text   ec_byte_write_at_end	(entenc.c)
  00002A32 00000054 .text   ec_enc_bits	(entenc.c)
  00002A86 00000060 .text   ec_enc_uint	(entenc.c)
  00002AE6 00000028 .text   _le_32	(header.c)
  00002B0E 00000088 .text   celt_header_init	(header.c)
  00002B96 0000008E .text   celt_header_to_packet	(header.c)
  00002C24 00000172 .text   kf_bfly2	(kiss_fft.c)
  00002D96 00000522 .text   kf_bfly4	(kiss_fft.c)
  000032B8 0000047E .text   kf_bfly3	(kiss_fft.c)
  00003736 00000B52 .text   kf_bfly5	(kiss_fft.c)
  00004288 000002A0 .text   kf_bfly_generic	(kiss_fft.c)
  00004528 0000007C .text   compute_bitrev_table	(kiss_fft.c)
  000045A4 00000144 .text   kf_work_celt_double	(kiss_fft.c)
  000046E8 0000006A .text   kf_factor	(kiss_fft.c)
  00004752 000000E2 .text   kiss_fft_alloc_celt_double	(kiss_fft.c)
  00004834 0000006A .text   celt_cos_norm	(kiss_fft.c)
  0000489E 0000006C .text   _celt_cos_pi_2	(kiss_fft.c)
  0000490A 0000006C .text   kiss_fft_stride_celt_double	(kiss_fft.c)
  00004976 00000016 .text   kiss_fft_celt_double	(kiss_fft.c)
  0000498C 00000024 .text   ec_laplace_get_start_freq	(laplace.c)
  000049B0 00000082 .text   ec_laplace_encode_start	(laplace.c)
  00004A32 00000076 .text   clt_mdct_init	(mdct.c)
  00004AA8 0000006A .text   celt_cos_norm	(mdct.c)
  00004B12 0000006C .text   _celt_cos_pi_2	(mdct.c)
  00004B7E 0000001C .text   clt_mdct_clear	(mdct.c)
  00004B9A 00000440 .text   clt_mdct_forward	(mdct.c)
  00004FDA 00000066 .text   celt_mode_info	(modes.c)
  00005040 000001F6 .text   compute_ebands	(modes.c)
  00005236 00000164 .text   compute_allocation_table	(modes.c)
  0000539A 00000766 .text   celt_mode_create	(modes.c)
  00005B00 000000D0 .text   celt_mode_destroy	(modes.c)
  00005BD0 00000020 .text   check_mode	(modes.c)
  00005BF0 00000036 .text   intra_decision	(quant_bands.c)
  00005C26 000000B0 .text   quant_prob_alloc	(quant_bands.c)
  00005CD6 00000008 .text   quant_prob_free	(quant_bands.c)
  00005CDE 000001E4 .text   quant_coarse_energy	(quant_bands.c)
  00005EC2 00000100 .text   quant_fine_energy	(quant_bands.c)
  00005FC2 00000010 .text   log2Amp	(quant_bands.c)
  00005FD2 0000007E .text   celt_exp2	(quant_bands.c)
  00006050 000000E6 .text   quant_energy_finalise	(quant_bands.c)
  00006136 0000006A .text   ec_enc_carry_out	(rangeenc.c)
  000061A0 00000028 .text   ec_enc_init	(rangeenc.c)
  000061C8 00000062 .text   ec_encode	(rangeenc.c)
  0000622A 0000003C .text   ec_enc_normalize	(rangeenc.c)
  00006266 00000054 .text   ec_encode_bin	(rangeenc.c)
  000062BA 0000007A .text   ec_encode_raw	(rangeenc.c)
  00006334 00000076 .text   ec_enc_tell	(rangeenc.c)
  000063AA 00000008 .text   ec_byte_bytes	(rangeenc.c)
  000063B2 000000BA .text   ec_enc_done	(rangeenc.c)
  0000646C 00000102 .text   compute_alloc_cache	(rate.c)
  0000656E 00000024 .text   get_pulses	(rate.c)
  00006592 00000210 .text   interp_bits2pulses	(rate.c)
  000067A2 0000014E .text   compute_allocation	(rate.c)
  000068F0 000001F0 .text   exp_rotation	(vq.c)
  00006AE0 0000006A .text   celt_cos_norm	(vq.c)
  00006B4A 0000006C .text   _celt_cos_pi_2	(vq.c)
  00006BB6 000000B8 .text   celt_rcp	(vq.c)
  00006C6E 00000072 .text   normalise_residual	(vq.c)
  00006CE0 0000007C .text   celt_rsqrt_norm	(vq.c)
  00006D5C 000003B4 .text   alg_quant	(vq.c)
  00007110 00000024 .text   get_pulses	(vq.c)
  00007134 00000090 .text   renormalise_vector	(vq.c)
  000071C4 000000C0 .text   celt_sqrt	(vq.c)
  00007284 00000054 .text   fold	(vq.c)
  000072D8 00000028 .text   intra_fold	(vq.c)
  00007300 00000096 .text   log2_frac	(cwrs.c)
  00007396 00000036 .text   fits_in32	(cwrs.c)
  000073CC 00000058 .text   ncwrs_urow	(cwrs.c)
  00007424 00000038 .text   unext	(cwrs.c)
  0000745C 000000BC .text   icwrs	(cwrs.c)
  00007518 00000020 .text   icwrs1	(cwrs.c)
  00007538 00000078 .text   get_required_split_bits	(cwrs.c)
  000075B0 00000174 .text   get_required_bits_pair	(cwrs.c)
  00007724 000000E8 .text   get_required_bits	(cwrs.c)
  0000780C 00000082 .text   encode_pulses	(cwrs.c)
  0000788E 00000078 .text   encode_pulses32	(cwrs.c)
  00007906 0000002A .text   SPI_Init	(SPI.c)
  00007930 0000001A .text   SPI_Send_byte	(SPI.c)
  0000794A 00000020 .text   SPI_Receive_byte	(SPI.c)
  0000796A 000000CC .text   SD_Init	(SD.c)
  00007A36 00000098 .text   SD_Write_Block	(SD.c)
  00007ACE 00000074 .text   SD_Read_Block	(SD.c)
  00007B42 00000064 .text   SD_SendCommand	(SD.c)
  00007BA6 0000001C .text   SD_CLKDelay	(SD.c)
  00007BC2 00000034 .text   LWordSwap	(Fat.c)
  00007BF6 000000B8 .text   FAT_Read_Master_Block	(Fat.c)
  00007CAE 0000013C .text   FAT_FileClose	(Fat.c)
  00007DEA 00000070 .text   FAT_SearchAvailableFAT	(Fat.c)
  00007E5A 00000090 .text   FAT_Entry	(Fat.c)
  00007EEA 000000DC .text   FAT_FileWrite	(Fat.c)
  00007FC6 00000032 .text   FAT_FileNameOrganizer	(Fat.c)
  00007FF8 00000434 .text   FAT_FileOpen	(Fat.c)
  0000842C 00000262 .text   main	(main.c)
  0000868E 0000001C .text   SCI_send_uchar	(main.c)
  000086AA 0000002E .text   SCI_send_header	(main.c)
  000086D8 0000008E .text   readFrame	(main.c)
  00008766 00000066 .text   scalbn	(libm.a math_sun.o     )
  000087CC 00000A4E .text   __ieee754_rem_pio2	(libm.a e_rem_pio2.o   )
  0000921A 00000496 .text   __kernel_cos	(libm.a k_cos.o        )
  000096B0 00000E68 .text   __kernel_rem_pio2	(libm.a k_rem_pio2.o   )
  0000A518 000003CA .text   __kernel_sin	(libm.a k_sin.o        )
  0000A8E2 00000026 .text   copysign	(libm.a s_copysign.o   )
  0000A908 000001FA .text   floor	(libm.a s_floor.o      )
  0000AB02 000000AE .text   frexp	(libm.a s_frexp.o      )
  0000ABB0 000002EA .text   ldexp	(libm.a s_ldexp.o      )
  0000AE9A 000001CA .text   sin	(libm.a s_sin.o        )
  0000B064 00000050 .text   __fpclassifyd	(libm.a math_api.o     )
  0000B0B4 0000001A .text   fabs	(libm.a s_fabs.o       )
  0000B0CE 0000003E .text   brk	(libc.a alloc.o        )
  0000B10C 00000020 .text   sbrk	(libc.a alloc.o        )
  0000B12C 0000013A .text   malloc	(libc.a alloc.o        )
  0000B266 0000000E .text   free	(libc.a alloc.o        )
  0000B274 00000026 .text   calloc	(libc.a alloc.o        )
  0000B29A 00000008 .text   abs	(libc.a arith.o        )
  0000B2A2 00000012 .text   memcpy	(libc.a mem.o          )
  0000B2B4 00000010 .text   memset	(libc.a mem.o          )
  0000B2C4 00000088 .text   __fill_mem	(libc.a mem_funcs.o    )
  0000B34C 0000001C .text   __call_static_initializers	(librt.a cf_staticinitia)
  0000B368 0000002C .text   __destroy_global_chain	(librt.a cf_staticinitia)
  0000B394 0000003E .text   __ldivu__	(librt.a cf_runtime.o   )
  0000B3D2 00000034 .text   __ldiv__	(librt.a cf_runtime.o   )
  0000B406 0000003C .text   __lmodu__	(librt.a cf_runtime.o   )
  0000B442 00000034 .text   __lmod__	(librt.a cf_runtime.o   )
  0000B476 00000006 .text   _ewl_abort	(librt.a abort_exit.o   )
  0000B47C 0000000C .text   _ewl_exit	(librt.a abort_exit.o   )
  0000B488 00000018 .text   __clear	(librt.a cpluslib.o     )
  0000B4A0 00000032 .text   .text	(fp_coldfire_nodiv.a basic.o        )
  0000B4A0 00000000 .text   _f_neg	(fp_coldfire_nodiv.a basic.o        )
  0000B4AC 00000000 .text   _d_neg	(fp_coldfire_nodiv.a basic.o        )
  0000B4C2 00000000 .text   _d_qtod	(fp_coldfire_nodiv.a basic.o        )
  0000B4C2 00000000 .text   _d_dtoq	(fp_coldfire_nodiv.a basic.o        )
  0000B4D4 00000000 .text   _d_add	(fp_coldfire_nodiv.a dadd.o         )
  0000B4D4 00000614 .text   .text	(fp_coldfire_nodiv.a dadd.o         )
  0000B704 00000000 .text   _d_sub	(fp_coldfire_nodiv.a dadd.o         )
  0000BAE8 00000000 .text   _d_cmp	(fp_coldfire_nodiv.a dcompare.o     )
  0000BAE8 0000015E .text   .text	(fp_coldfire_nodiv.a dcompare.o     )
  0000BAF2 00000000 .text   _d_cmpe	(fp_coldfire_nodiv.a dcompare.o     )
  0000BAFC 00000000 .text   _d_feq	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB02 00000000 .text   _d_fne	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB08 00000000 .text   _d_flt	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB0E 00000000 .text   _d_fle	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB14 00000000 .text   _d_fgt	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB1A 00000000 .text   _d_fge	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB24 00000000 .text   _d_fun	(fp_coldfire_nodiv.a dcompare.o     )
  0000BB2A 00000000 .text   _d_for	(fp_coldfire_nodiv.a dcompare.o     )
  0000BC48 00000000 .text   _d_div	(fp_coldfire_nodiv.a ddiv.o         )
  0000BC48 00000448 .text   .text	(fp_coldfire_nodiv.a ddiv.o         )
  0000C090 00000000 .text   _d_mul	(fp_coldfire_nodiv.a dmul.o         )
  0000C090 00000598 .text   .text	(fp_coldfire_nodiv.a dmul.o         )
  0000C628 00000056 .text   .text	(fp_coldfire_nodiv.a dterminals.o   )
  0000C628 00000000 .text   _fp_d_rounding	(fp_coldfire_nodiv.a dterminals.o   )
  0000C650 00000000 .text   _fp_d_underflow	(fp_coldfire_nodiv.a dterminals.o   )
  0000C664 00000000 .text   _fp_d_overflow	(fp_coldfire_nodiv.a dterminals.o   )
  0000C680 00000000 .text   _d_dtoi	(fp_coldfire_nodiv.a dtoi.o         )
  0000C680 0000008E .text   .text	(fp_coldfire_nodiv.a dtoi.o         )
  0000C710 00000000 .text   _d_utod	(fp_coldfire_nodiv.a int_to_d.o     )
  0000C710 00000136 .text   .text	(fp_coldfire_nodiv.a int_to_d.o     )
  0000C756 00000000 .text   _d_itod	(fp_coldfire_nodiv.a int_to_d.o     )
  0000C772 00000000 .text   _d_ulltod	(fp_coldfire_nodiv.a int_to_d.o     )
  0000C804 00000000 .text   _d_lltod	(fp_coldfire_nodiv.a int_to_d.o     )
  0000C848 00000000 .text   _fp_PA_divu16	(fp_coldfire_nodiv.a soft_division.o)
  0000C848 00000058 .text   .text	(fp_coldfire_nodiv.a soft_division.o)
  0000C8A0 0000000A .rodata @590	(bands.c)
  0000C8AA 00000008 .rodata @617	(celt.c)
  0000C8B2 00000020 .rodata transientWindow	(celt.c)
  0000C8D2 00000020 .rodata flaglist	(celt.c)
  0000C8F2 00000020 .rodata @1572	(celt.c)
  0000C912 00000009 .rodata @265	(header.c)
  0000C91B 00000015 .rodata @266	(header.c)
  0000C930 00000034 .rodata bark_freq	(modes.c)
  0000C964 000004B0 .rodata band_allocation	(modes.c)
  0000CE14 0000000A .rodata eMeans	(quant_bands.c)
  0000CE1E 0000000A .rodata @281	(vq.c)
  0000CE28 0000001E .rodata @LOCAL@fits_in32__Fii@maxN	(cwrs.c)
  0000CE46 0000001E .rodata @LOCAL@fits_in32__Fii@maxK@0	(cwrs.c)
  0000CE64 0000000B .rodata @229	(main.c)
  0000CE6F 00000009 .rodata @230	(main.c)
  0000CE78 00000108 .rodata two_over_pi	(libm.a e_rem_pio2.o   )
  0000CF80 00000080 .rodata npio2_hw	(libm.a e_rem_pio2.o   )
  0000D000 00000010 .rodata init_jk	(libm.a k_rem_pio2.o   )
  0000D010 00000040 .rodata PIo2	(libm.a k_rem_pio2.o   )
#>0000D050          ___ROM_AT (linker command file)
#>0000D050          ___DATA_ROM (linker command file)

# .data
#>00800000          ___DATA_RAM (linker command file)
#>00800000          __exception_table_start__ (linker command file)
# Exception index
  00800000 0000000C         Exception Table Index	()
#>0080000C          __exception_table_end__ (linker command file)
#>0080000C          ___sinit__ (linker command file)
# Linker generated symbols
  0080000C 00000004         static initializer	(linker generated)
#>00800010          __START_DATA (linker command file)
#>00800010          __END_DATA (linker command file)
#>00800010          __START_SDATA (linker command file)
  00800010 00000004 .sdata  tail	(libc.a alloc.o        )
  00800014 00000004 .sdata  __break	(libc.a alloc.o        )
#>00800018          __END_SDATA (linker command file)
#>00800018          ___DATA_END (linker command file)
#>00800018          __SDA_BASE (linker command file)

# .bss
#>00800018          ___BSS_START (linker command file)
#>00800018          __START_SBSS (linker command file)
  00800018 00000004 .sbss   global_stack	(celt.c)
  0080001C 00000004 .sbss   gu8SD_Argument	(SD.c)
  00800020 00000002 .sbss   u16Main_Offset	(Fat.c)
  00800022 00000002 .sbss   u16FAT_Data_BASE	(Fat.c)
  00800024 00000002 .sbss   u16FAT_Root_BASE	(Fat.c)
  00800026 00000002 .sbss   u16FAT_FAT_BASE	(Fat.c)
  00800028 00000002 .sbss   u16FAT_Cluster_Size	(Fat.c)
  0080002A 00000002 .sbss   u16FAT_Sector_Size	(Fat.c)
  0080002C 00000080 .sbss   ag8FATWriteBuffer	(Fat.c)
  008000AC 00000200 .sbss   ag8FATReadBuffer	(Fat.c)
  008002AC 0000000A .sbss   RHandler	(Fat.c)
  008002B6 00000019 .sbss   WHandler	(Fat.c)
  008002CF 00000004 .sbss   pread_buffer	(main.c)
  008002D3 00000004 .sbss   sel_buffer_read	(main.c)
  008002D7 000007D0 .sbss   fin02	(main.c)
  00800AA7 000007D0 .sbss   fin01	(main.c)
  00801278 00000004 .sbss   head	(libc.a alloc.o        )
  0080127C 00000004 .sbss   errno	(libc.a errno.o        )
#>00801280          __END_SBSS (linker command file)
#>00801280          __START_BSS (linker command file)
  00801280 00000004 .bss    __global_destructor_chain	(librt.a cf_staticinitia)
#>00801284          __END_BSS (linker command file)
#>00801284          ___BSS_END (linker command file)

# .custom
#>00801284          ___HEAP_START (linker command file)
#>00801284          ___heap_addr (linker command file)
#>00803814          ___HEAP_END (linker command file)
#>00803814          ___SP_END (linker command file)
#>00804014          ___SP_INIT (linker command file)
#>00803814          ___mem_limit (linker command file)
#>00000010          ___stack_safety (linker command file)
#>00804014          __SP_INIT (linker command file)
#>00804014          ___SP_AFTER_RESET (linker command file)
#>0000D068          _romp_at (linker command file)

# .romp
#>0000D068          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 00000004 .abs_vector_0 abs_vector_0
  00000004 00000004 00000004 .abs_vector_1 abs_vector_1
  00000008 00000008 00000004 .abs_vector_2 abs_vector_2
  0000000C 0000000C 00000004 .abs_vector_3 abs_vector_3
  00000010 00000010 00000004 .abs_vector_4 abs_vector_4
  00000014 00000014 00000004 .abs_vector_5 abs_vector_5
  00000018 00000018 00000004 .abs_vector_6 abs_vector_6
  0000001C 0000001C 00000004 .abs_vector_7 abs_vector_7
  00000020 00000020 00000004 .abs_vector_8 abs_vector_8
  00000024 00000024 00000004 .abs_vector_9 abs_vector_9
  00000028 00000028 00000004 .abs_vector_10 abs_vector_10
  0000002C 0000002C 00000004 .abs_vector_11 abs_vector_11
  00000030 00000030 00000004 .abs_vector_12 abs_vector_12
  00000034 00000034 00000004 .abs_vector_13 abs_vector_13
  00000038 00000038 00000004 .abs_vector_14 abs_vector_14
  0000003C 0000003C 00000004 .abs_vector_15 abs_vector_15
  00000040 00000040 00000004 .abs_vector_16 abs_vector_16
  00000044 00000044 00000004 .abs_vector_17 abs_vector_17
  00000048 00000048 00000004 .abs_vector_18 abs_vector_18
  0000004C 0000004C 00000004 .abs_vector_19 abs_vector_19
  00000050 00000050 00000004 .abs_vector_20 abs_vector_20
  00000054 00000054 00000004 .abs_vector_21 abs_vector_21
  00000058 00000058 00000004 .abs_vector_22 abs_vector_22
  0000005C 0000005C 00000004 .abs_vector_23 abs_vector_23
  00000060 00000060 00000004 .abs_vector_24 abs_vector_24
  00000064 00000064 00000004 .abs_vector_25 abs_vector_25
  00000068 00000068 00000004 .abs_vector_26 abs_vector_26
  0000006C 0000006C 00000004 .abs_vector_27 abs_vector_27
  00000070 00000070 00000004 .abs_vector_28 abs_vector_28
  00000074 00000074 00000004 .abs_vector_29 abs_vector_29
  00000078 00000078 00000004 .abs_vector_30 abs_vector_30
  0000007C 0000007C 00000004 .abs_vector_31 abs_vector_31
  00000080 00000080 00000004 .abs_vector_32 abs_vector_32
  00000084 00000084 00000004 .abs_vector_33 abs_vector_33
  00000088 00000088 00000004 .abs_vector_34 abs_vector_34
  0000008C 0000008C 00000004 .abs_vector_35 abs_vector_35
  00000090 00000090 00000004 .abs_vector_36 abs_vector_36
  00000094 00000094 00000004 .abs_vector_37 abs_vector_37
  00000098 00000098 00000004 .abs_vector_38 abs_vector_38
  0000009C 0000009C 00000004 .abs_vector_39 abs_vector_39
  000000A0 000000A0 00000004 .abs_vector_40 abs_vector_40
  000000A4 000000A4 00000004 .abs_vector_41 abs_vector_41
  000000A8 000000A8 00000004 .abs_vector_42 abs_vector_42
  000000AC 000000AC 00000004 .abs_vector_43 abs_vector_43
  000000B0 000000B0 00000004 .abs_vector_44 abs_vector_44
  000000B4 000000B4 00000004 .abs_vector_45 abs_vector_45
  000000B8 000000B8 00000004 .abs_vector_46 abs_vector_46
  000000BC 000000BC 00000004 .abs_vector_47 abs_vector_47
  000000C0 000000C0 00000004 .abs_vector_48 abs_vector_48
  000000C4 000000C4 00000004 .abs_vector_49 abs_vector_49
  000000C8 000000C8 00000004 .abs_vector_50 abs_vector_50
  000000CC 000000CC 00000004 .abs_vector_51 abs_vector_51
  000000D0 000000D0 00000004 .abs_vector_52 abs_vector_52
  000000D4 000000D4 00000004 .abs_vector_53 abs_vector_53
  000000D8 000000D8 00000004 .abs_vector_54 abs_vector_54
  000000DC 000000DC 00000004 .abs_vector_55 abs_vector_55
  000000E0 000000E0 00000004 .abs_vector_56 abs_vector_56
  000000E4 000000E4 00000004 .abs_vector_57 abs_vector_57
  000000E8 000000E8 00000004 .abs_vector_58 abs_vector_58
  000000EC 000000EC 00000004 .abs_vector_59 abs_vector_59
  000000F0 000000F0 00000004 .abs_vector_60 abs_vector_60
  000000F4 000000F4 00000004 .abs_vector_61 abs_vector_61
  000000F8 000000F8 00000004 .abs_vector_62 abs_vector_62
  000000FC 000000FC 00000004 .abs_vector_63 abs_vector_63
  00000100 00000100 00000004 .abs_vector_64 abs_vector_64
  00000104 00000104 00000004 .abs_vector_65 abs_vector_65
  00000108 00000108 00000004 .abs_vector_66 abs_vector_66
  0000010C 0000010C 00000004 .abs_vector_67 abs_vector_67
  00000110 00000110 00000004 .abs_vector_68 abs_vector_68
  00000114 00000114 00000004 .abs_vector_69 abs_vector_69
  00000118 00000118 00000004 .abs_vector_70 abs_vector_70
  0000011C 0000011C 00000004 .abs_vector_71 abs_vector_71
  00000120 00000120 00000004 .abs_vector_72 abs_vector_72
  00000124 00000124 00000004 .abs_vector_73 abs_vector_73
  00000128 00000128 00000004 .abs_vector_74 abs_vector_74
  0000012C 0000012C 00000004 .abs_vector_75 abs_vector_75
  00000130 00000130 00000004 .abs_vector_76 abs_vector_76
  00000134 00000134 00000004 .abs_vector_77 abs_vector_77
  00000138 00000138 00000004 .abs_vector_78 abs_vector_78
  0000013C 0000013C 00000004 .abs_vector_79 abs_vector_79
  00000140 00000140 00000004 .abs_vector_80 abs_vector_80
  00000144 00000144 00000004 .abs_vector_81 abs_vector_81
  00000148 00000148 00000004 .abs_vector_82 abs_vector_82
  0000014C 0000014C 00000004 .abs_vector_83 abs_vector_83
  00000150 00000150 00000004 .abs_vector_84 abs_vector_84
  00000154 00000154 00000004 .abs_vector_85 abs_vector_85
  00000158 00000158 00000004 .abs_vector_86 abs_vector_86
  0000015C 0000015C 00000004 .abs_vector_87 abs_vector_87
  00000160 00000160 00000004 .abs_vector_88 abs_vector_88
  00000164 00000164 00000004 .abs_vector_89 abs_vector_89
  00000168 00000168 00000004 .abs_vector_90 abs_vector_90
  0000016C 0000016C 00000004 .abs_vector_91 abs_vector_91
  00000170 00000170 00000004 .abs_vector_92 abs_vector_92
  00000174 00000174 00000004 .abs_vector_93 abs_vector_93
  00000178 00000178 00000004 .abs_vector_94 abs_vector_94
  0000017C 0000017C 00000004 .abs_vector_95 abs_vector_95
  00000180 00000180 00000004 .abs_vector_96 abs_vector_96
  00000184 00000184 00000004 .abs_vector_97 abs_vector_97
  00000188 00000188 00000004 .abs_vector_98 abs_vector_98
  0000018C 0000018C 00000004 .abs_vector_99 abs_vector_99
  00000190 00000190 00000004 .abs_vector_100 abs_vector_100
  00000194 00000194 00000004 .abs_vector_101 abs_vector_101
  00000198 00000198 00000004 .abs_vector_102 abs_vector_102
  0000019C 0000019C 00000004 .abs_vector_103 abs_vector_103
  000001A0 000001A0 00000004 .abs_vector_104 abs_vector_104
  000001A4 000001A4 00000004 .abs_vector_105 abs_vector_105
  000001A8 000001A8 00000004 .abs_vector_106 abs_vector_106
  000001AC 000001AC 00000004 .abs_vector_107 abs_vector_107
  000001B0 000001B0 00000004 .abs_vector_108 abs_vector_108
  000001B4 000001B4 00000004 .abs_vector_109 abs_vector_109
  000001B8 000001B8 00000004 .abs_vector_110 abs_vector_110
  0000040D 0000040D 00000001 .abs_NVPROT_INIT abs_NVPROT_INIT
  0000040F 0000040F 00000001 .abs_NVOPT_INIT abs_NVOPT_INIT
  00000410 00000410 00000000 .code      code
  00000410 00000410 0000CC40 .text      code
  00800000 00800000 00000000 .userram   userram
  00800000 0000D050 00000018 .data      userram
  00800018 00800018 0000126C .bss       userram
  00801284 00801284 00000000 .custom    userram
  00801284 0000D068 00000018 .romp      userram

# Link start time: Mon Apr 22 19:05:58 2013
# Link end time: Mon Apr 22 19:05:59 2013
